{"version":3,"sources":["Links/index.js","App.js","serviceWorker.js","index.js"],"names":["Links","react_default","a","createElement","className","href","target","rel","React","Component","App","data-friction-x","data-friction-y","data-scalar-x","data-scalar-y","id","data-depth","alt","src","src_Links","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","increment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d17efa36.chunk.js","sourcesContent":["import React from 'react';\nimport './bootstrap.min.css';\nimport '../App.css'\n\nclass Links extends React.Component {\n    render() {\n        return (\n            <div className='App'>\n                <div className='row'>\n                    <div className='col-6'><br /><br />\n                        {/* ted.com */}\n                        <a href={'https://www.ted.com/#/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-success'>Ted</a><br/><br/>\n                        {/* scientificamerican.com */}\n                        <a href={'https://www.scientificamerican.com/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-danger'>Scientific American</a><br/><br/>\n                        {/* listenaminute.com  */}\n                        <a href={'https://www.listenaminute.com/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-primary'>Listen a Minute</a>\n                    </div>\n                    <div className='col-6'><br /><br />\n                        {/* lingorank.com  */}\n                        <a href={'https://www.lingorank.com/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-warning'>Lingo Rank</a><br/><br/>\n                        {/* www.rong-chang.com  */}\n                        <a href={'https://www.rong-chang.com/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-dark'>rong-chang</a><br/><br/>\n                        {/* englishteststore.net  */}\n                        <a href={'https://www.englishteststore.net/'} target=\"_blank\" rel=\"noopener noreferrer\" className='btn btn-info'>English Test Store</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Links;","import React from 'react';\nimport Links from './Links';\n\nclass App extends React.Component{\n  \n  render(){\n  return (\n    <div className=\"App\">\n      <div>\n        <div className=\"preloader\">\n          <div className=\"loading\">\n            <h2>\n              Loading...\n            </h2>\n            <span className=\"progress\" />\n          </div>\n        </div>\n        <div className=\"wrapper\">\n          <ul className=\"scene unselectable\" data-friction-x=\"0.1\" data-friction-y=\"0.1\" data-scalar-x={25} data-scalar-y={15} id=\"scene\">\n            <li className=\"layer\" data-depth={0.00}>\n            </li>\n            {/* BG */}\n            <li className=\"layer\" data-depth=\"0.10\">\n              <div className=\"background\">\n              </div>\n            </li>\n            {/* Hero */}\n            <li className=\"layer\" data-depth=\"0.20\">\n              <div className=\"title\">\n                <h2>\n                  Comming Soon\n                </h2>\n                <span className=\"line\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth=\"0.25\">\n              <div className=\"sphere\">\n                <img alt=\"sphere\" src=\"assets/images/sphere.png\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth=\"0.30\">\n              <div className=\"hero\">\n                <h1 id=\"countdown\">\n                Ready for Prepartion\n                </h1>\n                <p className=\"sub-title\">\n                  Ready for Prepartion\n                </p>\n              </div>\n            </li>\n            {/* Flakes */}\n            <li className=\"layer\" data-depth=\"0.40\">\n              <div className=\"depth-1 flake1\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth1/flakes1.png\" />\n              </div>\n              <div className=\"depth-1 flake2\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth1/flakes2.png\" />\n              </div>\n              <div className=\"depth-1 flake3\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth1/flakes3.png\" />\n              </div>\n              <div className=\"depth-1 flake4\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth1/flakes4.png\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth=\"0.50\">\n              <div className=\"depth-2 flake1\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth2/flakes1.png\" />\n              </div>\n              <div className=\"depth-2 flake2\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth2/flakes2.png\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth=\"0.60\">\n              <div className=\"depth-3 flake1\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth3/flakes1.png\" />\n              </div>\n              <div className=\"depth-3 flake2\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth3/flakes2.png\" />\n              </div>\n              <div className=\"depth-3 flake3\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth3/flakes3.png\" />\n              </div>\n              <div className=\"depth-3 flake4\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth3/flakes4.png\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth=\"0.80\">\n              <div className=\"depth-4\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth4/flakes.png\" />\n              </div>\n            </li>\n            <li className=\"layer\" data-depth={1.00}>\n              <div className=\"depth-5\">\n                <img alt=\"flake\" src=\"assets/images/flakes/depth5/flakes.png\" />\n              </div>\n            </li>\n            {/* Contact */}\n            <li className=\"layer\" data-depth=\"0.20\">\n              <div className=\"contact\">\n                Theme by DVS_MAX_5\n                <Links/>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App increment={1}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}